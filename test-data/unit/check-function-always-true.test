[case testFunctionAlwaysTrue]
# flags: --python-version 3.6
def f(x: int) -> str: pass

if f: # E: Function "f" that has signature "Callable[[int], str]" could always be true in boolean context
    pass

[case testVariableAlwaysTrue]
# flags: --python-version 3.6
def f(x: int) -> str: pass

my_var = f

if my_var: # E: Variable Function "my_var" that has signature "Callable[[int], str]" could always be true in boolean context
    pass

[case testMethodAlwaysTrue]
# flags: --python-version 3.6
class User:
    def __init__(self, username):
        self.username = username

    def isUser(self, x: int) -> str: pass

user = User("Kenny")

if user.isUser: # E: Method "isUser" that has signature "Callable[[int], str]" could always be true in boolean context
    pass

[case testFunctionAlwaysTrue2]
# flags: --python-version 3.6
def f(x: int) -> str: pass

def callable():
    return f

f = callable()
if f: # E: Function "f" that has signature "Callable[[int], str]" could always be true in boolean context
    pass
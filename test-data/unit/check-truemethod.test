[case testMethodAlwaysTrue]
class User:
    def __init__(self, username):
        self.username = username

    def isUser(self, x: int) -> str: pass

user = User("Kenny")

if user.isUser(2): # E: Method "isUser" could always be true in boolean context
    pass

[case testNewSyntaxBasicsK]
# flags: --python-version 3.6
x: int
x = 5
y: int = 5

a: str
a = 5  # E: Incompatible types in assignment (expression has type "int", variable has type "str")
b: str = 5  # E: Incompatible types in assignment (expression has type "int", variable has type "str")

zzz: int
zzz: str  # E: Name "zzz" already defined on line 10


[case testFunctionAlwaysTrueK]
# flags: --python-version 3.6
def f(x: int) -> str: pass

if f:  # E: Function "Callable[[int], str]" could always be true in boolean context
    pass